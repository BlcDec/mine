#include<iostream>
#include<fstream>
#include<ctime>
#include<string>
#include<ctype.h>
#include <windows.h>
using namespace std;
BOOL SetConsoleColor(WORD wAttributes)
{
	HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
	if (hConsole == INVALID_HANDLE_VALUE)
		return FALSE;

	return SetConsoleTextAttribute(hConsole, wAttributes);
}
void   Delay(int   time)//time*1000为秒数 
{
	clock_t   now = clock();

	while (clock() - now   <   time);
}
void catalogue()
{
	cout << "                                                   " << endl;
	cout << "------------------猜单词游戏-----------------------" << endl;
	cout << "                                                   " << endl;
	cout << "-----------1新游戏-2查看单词本-3退出---------------" << endl;
	cout << "-------------------8多词背诵-----------------------" << endl;
}
class Word
{
private:
	char word[10][11];
	string str[20];
	char wordsingle;
	int length[10], innum, outnum, rand1, rand2;
public:
	Word() {  }
	int  getWord();
	int  getLength();
	void produceWord();
	void carry();
	void getRand1();
	int store();
	int showUnknowWord();
	int one();
	int two();
	int eight();
};
int Word::getWord()
{
	innum = 0;
	outnum = 0;
	fstream in("D:\\game\\answer.txt", ios::in);
	in.seekg(0, ios::beg);
	if (!in)
	{
		cout << "file not found!" << endl;
		return 0;
	}

	else
	{
		while (!in.eof())
		{
			in >> word[innum];
			innum++;
			if (innum > 10)
				return 0;
		}
	}
	return 0;
}
int Word::getLength()
{

	for (int i = 0, numlength = 0;i < innum;i++, numlength++)
	{
		int  j = 0;
		while (word[i][j])
		{
			j++;
		}
		length[numlength] = j;

	}
	/*	for (int i = 0;i < 10;i++)
	{
	cout << length[i];
	}*/
	return 0;
}
void Word::produceWord()
{
	rand2 = (rand() % length[rand1]);
	wordsingle = word[rand1][rand2];
	word[rand1][rand2] = '*';
	/*		for (int i = 0;i < length[rand1];i++)
	{
	cout << word[rand1][i];
	}*/
}
void Word::carry()
{
	Word A;
	cout << '\n' << word[rand1] << '\n' << '\n';
	cout << "------------------请补全“*”位置的字母----------------" << endl;
	char s;
	cin >> s;
	if (s == wordsingle)
	{
		SetConsoleColor(FOREGROUND_GREEN | FOREGROUND_INTENSITY | 0);
		cout << "congritulations" << endl;
		SetConsoleColor(FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE);
		word[rand1][rand2] = wordsingle;
	}
	else
	{
		SetConsoleColor(FOREGROUND_RED | FOREGROUND_INTENSITY | 0);
		cout << "ERROR" << endl;
		SetConsoleColor(FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE);
		printf("-----------------------------------\n\n");
		word[rand1][rand2] = wordsingle;

	}
}
void Word::getRand1()
{
	rand1 = (rand() % innum);
}
int  Word::showUnknowWord()
{
	fstream input("D:\\game\\unknownword.txt", ios::in);
	input.seekg(0, ios::beg);
	if (!input)
	{
		cout << "file not found!" << endl;
		return 0;
	}
	else
	{
		while (!input.eof())
		{
			//input.getline(str[outnum],20);
			input >> str[outnum];
			outnum++;
			if (outnum > 20)
				break;
		}
	}
	string str0[20];
	int outnum0;
	int k = 0;
	for (int i = 0;i < outnum;i++)
	{
		int m = 0;
		for (int j = 0;j < i;j++)
		{
			if (str[i] == str[j])
			{
				m = 1;
				break;
			}
			else
				continue;
		}
		if (m == 0)
		{
			str0[k] = str[i];
			k++;
		}
	}
	for (int i = 0;i < k;i++)
	{
		std::cout << str0[i] << endl;
	}
}
int Word::store()
{
	ofstream input("D:\\game\\unknownword.txt", ios::app | ios::out);
	input << word[rand1] << endl;
	input.close();
	return 0;
}
int Word::one()
{
	int status0 = 1;
	while (status0 == 1)
	{
		getRand1();
		getLength();
		produceWord();
		carry();
		int status;
		cout << "是否将该单词加入到生词本--1--是   2--否" << endl;
		cin >> status;
		if (status == 1)
		{

			store();
		}
		else
		{

		}
		catalogue();
		int  status1;
		cin >> status1;
		if (status1 == 1)
		{
			status0 = 1;
		}
		else if (status1 == 2)
		{
			showUnknowWord();
			status0 = 1;
			Delay(2 * 1000);
		}
		else
		{
			return 0;
		}
	}
}
int Word::two()
{
	showUnknowWord();
	Delay(2000);
	/*int status0 = 1;
	while (status0 == 1)
	{
	getRand1();
	getLength();
	produceWord();
	carry();
	int status;
	cout << "是否将该单词加入到生词本--1--是   2--否" << endl;
	cin >> status;
	if (status == 1)
	{

	store();
	}
	else
	{

	}
	catalogue();
	int  status1;
	cin >> status1;
	if (status1 == 1)
	{
	status0 = 1;
	}
	else if (status1 == 2)
	{
	showUnknowWord();
	status0 = 1;
	Delay(2 * 1000);
	}
	else
	{
	return 0;
	}
	}*/
	return 0;
}
int Word::eight()
{
	cout << "------How much do you want to recite------" << endl;
	int number;
	cin >> number;
	for (int i = 0;i < number;i++)
	{
		getRand1();
		getLength();
		produceWord();
		carry();
		int status;
		cout << "是否将该单词加入到生词本--1--是   2--否" << endl;
		cin >> status;
		if (status == 1)
		{

			store();
		}
		else
		{

		}
		/*int  status1;
		cin >> status1;
		if (status1 == 1)
		{
		}
		else if (status1 == 2)
		{
		A.showUnknowWord();
		Delay(2 * 1000);
		}
		else
		{
		return 0;
		}*/
	}
	return 0;
}
int main()
{
	srand((unsigned)time(NULL));
	Word A;
	A.getWord();
	A.getRand1();
	A.getLength();
	int a;
	int test = 0;
	while (1)
	{
		catalogue();
		cin >> a;
		if (a == 1)
		{
			A.one();
			continue;
		}
		else if (a == 2)
		{
			A.two();
			continue;
		}
		else if (a == 8)
		{
			A.eight();
			continue;
		}

		else
		{
			return 0;
		}

	}
}
